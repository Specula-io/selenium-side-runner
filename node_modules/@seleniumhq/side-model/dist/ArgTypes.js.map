{"version":3,"sources":["../src/ArgTypes.ts"],"names":["alertText","name","description","answer","attributeLocator","arrayVariableName","conditionalExpression","coord","expectedValue","expression","formLocator","handle","iteratorVariableName","json","keySequence","locator","locatorOfDragDestinationObject","locatorOfObjectToBeDragged","loopLimit","message","optionLocator","pattern","region","resolution","script","selectLocator","testCase","text","times","url","value","variableName","waitTime","xpath"],"mappings":"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","sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nexport interface ArgType {\n  name: string\n  description: string\n}\n\nexport interface ArgTypes {\n  [key: string]: ArgType\n}\n\nexport default {\n  alertText: {\n    name: 'alert text',\n    description: 'text to check',\n  },\n  answer: {\n    name: 'answer',\n    description: 'The answer to give in response to the prompt pop-up.',\n  },\n  attributeLocator: {\n    name: 'attribute locator',\n    description: `An element locator followed by an @ sign and then the name of \n    the attribute, e.g. \"foo@bar\".`,\n  },\n  arrayVariableName: {\n    name: 'array variable name',\n    description: 'The name of a variable containing a JavaScript array.',\n  },\n  conditionalExpression: {\n    name: 'conditional expression',\n    description: `JavaScript expression that returns a boolean result for use \n    in control flow commands.`,\n  },\n  coord: {\n    name: 'coord string',\n    description: `Specifies the x,y position (e.g., - 10,20) of the mouse event \n    relative to the element found from a locator.`,\n  },\n  expectedValue: {\n    name: 'expected value',\n    description: `The result you expect a variable to contain (e.g., true, false, \n    or some other value).`,\n  },\n  expression: {\n    name: 'expression',\n    description: \"The value you'd like to store.\",\n  },\n  formLocator: {\n    name: 'form locator',\n    description: `An element locator for the form you want to submit.`,\n  },\n  handle: {\n    name: 'window handle',\n    description: `A handle representing a specific page (tab, or window).`,\n  },\n  iteratorVariableName: {\n    name: 'iterator variable name',\n    description: `The name of the variable used when iterating over a collection in a looping control flow command (e.g., for each).`,\n  },\n  json: {\n    name: 'json',\n    description: `A string representation of a JavaScript object.`,\n  },\n  keySequence: {\n    name: 'key sequence',\n    description:\n      'A sequence of keys to type, can be used to send key strokes (e.g. ${KEY_ENTER}).',\n  },\n  locator: {\n    name: 'locator',\n    description: 'An element locator.',\n  },\n  locatorOfDragDestinationObject: {\n    name: 'locator of drag destination object',\n    description: `The locator of an element whose location (e.g., the center-most \n    pixel within it) will be the point where locator of object to be dragged is \n    dropped.`,\n  },\n  locatorOfObjectToBeDragged: {\n    name: 'locator of object to be dragged',\n    description: 'The locator of element to be dragged.',\n  },\n  loopLimit: {\n    name: 'loop limit',\n    description: `Maximum number of times a looping control flow command can execute to protect against infinite loops.`,\n  },\n  message: {\n    name: 'message',\n    description: 'The message to print.',\n  },\n  optionLocator: {\n    name: 'option',\n    description:\n      'An option locator, typically just an option label (e.g. \"John Smith\").',\n  },\n  pattern: {\n    name: 'text',\n    description: `An exact string match. Support for pattern matching is in the \n    works. See https://github.com/SeleniumHQ/selenium-ide/issues/141 for details.`,\n  },\n  region: {\n    name: 'region',\n    description: `Specify a rectangle with coordinates and lengths (e.g., \"x: 257, \n    y: 300, width: 462, height: 280\").`,\n  },\n  resolution: {\n    name: 'resolution',\n    description: `Specify a window resolution using WidthxHeight. (e.g., 1280x800).`,\n  },\n  script: {\n    name: 'script',\n    description: 'The JavaScript snippet to run.',\n  },\n  selectLocator: {\n    name: 'select locator',\n    description: 'An element locator identifying a drop-down menu.',\n  },\n  testCase: {\n    name: 'test case',\n    description: 'Test case name from the project.',\n  },\n  text: {\n    name: 'text',\n    description: 'The text to verify.',\n  },\n  times: {\n    name: 'times',\n    description: `The number of attempts a times control flow loop will execute \n    the commands within its block.`,\n  },\n  url: {\n    name: 'url',\n    description: 'The URL to open (may be relative or absolute).',\n  },\n  value: {\n    name: 'value',\n    description: 'The value to type.',\n  },\n  variableName: {\n    name: 'variable name',\n    description: `The name of a variable (without brackets). Used to either store \n    an expression's result in or reference for a check (e.g., with 'assert' or \n    'verify').`,\n  },\n  waitTime: {\n    name: 'wait time',\n    description: 'The amount of time to wait (in milliseconds).',\n  },\n  xpath: {\n    name: 'xpath',\n    description: 'The xpath expression to evaluate.',\n  },\n} as ArgTypes\n"],"file":"ArgTypes.js"}